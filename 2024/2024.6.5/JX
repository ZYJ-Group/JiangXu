#include <stdio.h>
int main(int argc, const char *argv[])
{
    printf("hello world\n");
    return 0;
}

#:预处理标识符
include:包含头文件的标准格式
<>:从C语言的标准库中找头文件
"":从指定的路径中找头文件，一般用于导入自己写的头文件，如果找不到指定的头文件就去标准库中找
stdio.h:标准输入输出的库文件
int:函数的返回值类型
main:函数名，主函数，是程序的入口，每一个C程序有且仅有一个主函数
(int argc, const char *argv[]):()函数的参数列表,int argc, const char *argv[]主函数的外部参数
{}:函数体
printf("hello world\n");  //printf是标准输出函数
printf中""内的内容，除了转义字符和占位符外，都原封不动的输出
\n是转义字符，换行
;每一条语句，都要有一个;，C语言中语句结束的标志
return:返回函数的返回值
0:函数的返回值

//单行注释
/*
多行注释
*/

#if 0 
条件注释
#endif

【1】计算机中的存储单位
存储的最小单位1bit
内存分配的最小单位1Byte
1Byte = 8bit
1Kb = 1024Byte
1Mb = 1024Kb
1Gb = 1024Mb
1Tb = 1024Gb
【2】进制转换
二进制、八进制、十进制、十六进制
1001 ---->9
176
二进制八进制十进制十六进制基数281016数码0、10-70-90-9A-F位权从右到左2^0,2^1···8^0，8^1···前导符0b00x
i）二进制转十进制
二进制转十进制：用数码*该位的位权求和
8421  
1001 ----> 1*2^0+1*2^3 = 9
1101  1110  = 14+64+128+16 =  222
0110  0011 = 99
ii）二进制转八进制
1111   1111
三位二进制数可以换一位八进制数
0010 1101    ====>    055
0111 1001    ------->   0171
1111  0010   ------->   0362 
iii）二进制转16进制
每四位二进制换一位16进制
1111  0010    0xF2
0111 1001     0x79
0010 1101     0x2D
练习：
1、0x89 转二进制       1000 1001  
2、0x73 转八进制       0111  0011    
3、0x91 转二进制       1001 0001
4、0100 0011转八进制    0103
5、1011 1110 转十六进制   0xBE

利用辗转相除法，N是除数，拿到每次的余数
126  ---->转二进制

1111 1111
0111 1110
123转二进制


练习：
0111  --->7
1000  ----->8
0 1111 ----->15
1 0000 ----->16
1、53转十六进制    0x35
2、253转二进制   1111 1101
3、255转二进制   1111 1111 
4、214转二进制   1101 0110
5、234转十六进制   0xEA
6、79转十六进制     0x4F\

四、数据类型
给不同的数据，提供一个模板，决定分配空间的大小
数值类型数据，非数值类型的数据
【1】C语言中的数据类型
基本数据类型：int、float、long int·····
构造数据类型：数组、结构体、共用体···
指针：
viod：空类型
【2】整形
数据类型大小占位符int4Byte%dlong int64位占8Byte32位占4Byte%ldlong long int8Byte%ldshort int 2Byte%d
【3】浮点型
浮点型数据在计算机中存储的是近似值，常规代码中使用printf输出，默认只能输出小数点后6位
数据类型大小占位符float4Byte，单精度浮点型，可以表示小数点后6位%fdouble8Byte，双精度浮点型，可以表示小数点后16位%lf
【4】字符类型
非数值型的数据，在计算机中存储时，会转换成ASCII码存储。
数据类型大小占位符char1Byte%c，输出字符类型'a','b'%d，输出字符的ASCII码
在虚拟机中直接man ASCII就能显示ASCII码表
【5】enum枚举类型

五、常量
常量指的是，程序运行过程中不能改变的量
【1】整型常量
100、19····整数
整形常量默认是long int
占位符 %d
【2】浮点型常量
3.14·····常见的小数
浮点型常量默认是double类型
%lf
【3】字符型常量
'a'、'b'、'c'·····
由单引号括起来的单个字符
%c 输出字符
%d 输出ASCII码

【4】字符串常量
C语言中不支持字符串类型，字符串一般使用字符数组存储
"hello world"，"h"······
由双引号括起来的一个或多个字符    
%s

【5】宏定义常量
i）无参宏定义
#define 宏名 宏体
宏定义就是宏体简单替换宏名的过程
#define N 10
#预处理标识符，说明宏定义在预处理阶段被替换
注意事项：
1.宏定义的位置一般在头文件下方，主函数的上方
2.宏名一般大写
3.宏定义是简单替换的过程
4.如果宏定义的参数想要替换成字符串，需要在宏体中给参数加#
5.宏定义不需要加;
练习
1、#define N 10
      #define M N+2
      #define NUM M*N+M/4
//NUM=12*10+12/4=123

有参宏定义
#define 宏名(参数1,参数2,····)  宏体
#defin ADD(a,b) a+b    ---->可以实现简单的运算
#在宏定义中的使用，把带参宏的参数替换成字符串
当给带参宏的参数，添加#后，带参宏的参数就会被替换成字符串

练习：
1、使用带参宏，实现加法、减法和乘法。
2、#define STR hello，可以使用%s输出吗？
#include <stdio.h>
#define ADD(a,b) a+b
#define SUB(a,b) a-b
#define MUL(a,b) a*b
#define STR(n) #n  //把n替换成字符串n
int main(int argc, const char *argv[])
{
    printf("%d\n",ADD(10,8));
    printf("%d\n",SUB(20,7));
    printf("%d\n",MUL(20,7));
    //printf("%s\n",STR(hh));
    //printf("%s\n",hh);
    return 0;
}
